// Generated by CoffeeScript 1.7.1
(function() {
  (function(App) {
    return App.ChartDrawer = (function() {
      var drawChart, makeScales;
      makeScales = function(vars, data) {
        return App.ScaleMaker(vars, data);
      };
      drawChart = function(vars, data) {
        var c, chartHeight, chartPadding, chartWidth, dotHolder, posColors, r, scales, scatterplot, scatterplotPoints, x, xAxis, y, yAxis;
        vars = {
          xVar: App.settings.statToAbbr[vars["x-var-select"]],
          yVar: App.settings.statToAbbr[vars["y-var-select"]],
          rVar: App.settings.statToAbbr[vars["size-var-select"]],
          cVar: App.settings.statToAbbr[vars["shade-var-select"]]
        };
        App.scales = scales = makeScales(vars, data);
        chartHeight = App.settings.chart.height;
        chartWidth = App.settings.chart.width;
        chartPadding = App.settings.chart.padding;
        posColors = Plotter.settings.posColors;
        x = vars.xVar;
        y = vars.yVar;
        r = vars.rVar;
        c = vars.cVar;
        $(".chart-pane").empty();
        scatterplot = d3.select(".chart-pane").append("svg").attr("id", "d3-scatterplot");
        dotHolder = d3.select("#d3-scatterplot").append("g").attr("id", "dot-holder");
        scatterplotPoints = dotHolder.selectAll("circle").data(data).enter().append("circle").attr("cx", function(d) {
          return scales.x(d[x]);
        }).attr("cy", function(d) {
          return scales.y(d[y]);
        }).attr("r", function(d) {
          if (scales.r && d[r]) {
            return scales.r(d[r]);
          } else {
            return 4;
          }
        }).attr("fill", function(d) {
          var base;
          base = posColors[d.fantPos];
          if (scales.c && d[c]) {
            if (scales.c(d[c]) > 0) {
              return Color(base).lightenByAmount(scales.c(d[c])).desaturateByAmount(scales.c(d[c])).toCSS();
            } else {
              return Color(base).darkenByAmount(0 - scales.c(d[c])).saturateByAmount(0 - scales.c(d[c])).toCSS();
            }
          } else {
            return base;
          }
        }).attr("id", function(d) {
          var id;
          id = "";
          id += d.name.split(" ").join("-").replace(/\./g, "").replace(/'/g, "") + "_";
          id += d.season + "_";
          id += d.fantPos;
          return id;
        });
        xAxis = d3.svg.axis().scale(scales.x).orient("bottom");
        yAxis = d3.svg.axis().scale(scales.y).orient("left");
        scatterplot.append("g").attr("class", "axis").attr("id", "xAxis").attr("transform", "translate( 0, " + (chartHeight - chartPadding) + " )").call(xAxis);
        scatterplot.append("text").attr("class", "xAxis-label").attr("transform", "translate( " + chartPadding + ", " + (chartHeight + 30 - chartPadding * 2) + " )").text(x);
        scatterplot.append("g").attr("class", "axis").attr("id", "yAxis").attr("transform", "translate( " + chartPadding + ", 0 )").call(yAxis);
        return scatterplot.append("text").attr("class", "yAxis-label").attr("transform", "translate( " + chartPadding + ", 0) rotate(-90)").text(y);
      };
      return drawChart;
    })();
  })(window.Plotter);

}).call(this);
