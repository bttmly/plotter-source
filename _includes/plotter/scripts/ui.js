// Generated by CoffeeScript 1.7.1
(function() {
  (function(App) {
    (function() {
      return $(".input-select--variables").chosen({
        width: "100%"
      });
    })();
    (function() {
      var togglers;
      $(".input-group").data("plotter-open", true);
      togglers = $(".input-group__toggle");
      return togglers.click(function() {
        var content, inputGroup;
        inputGroup = $(this).parent(".input-group");
        content = inputGroup.find(".input-group__content");
        if (inputGroup.data("plotter-open")) {
          content.slideUp();
          return inputGroup.addClass("input-group--collapsed").data("plotter-open", false);
        } else {
          content.slideDown();
          return inputGroup.removeClass("input-group--collapsed").data("plotter-open", true);
        }
      });
    })();
    (function() {
      var navbar, toggler;
      navbar = $(".navbar");
      toggler = $(".menu-toggle");
      toggler.data("plotter-menu-state");
      return toggler.click(function() {
        $(this).toggleClass("menu-toggle--x");
        return $("html").toggleClass("navbar-open");
      });
    })();
    (function() {
      var playerSelect;
      playerSelect = $(".input-select--players");
      return App.on("dataSetLoaded", function(event, fullSet) {
        var htmlStr, name, names, _i, _len;
        names = (new Collection(fullSet)).pluck("name").sort().unique();
        htmlStr = "<option></option>";
        for (_i = 0, _len = names.length; _i < _len; _i++) {
          name = names[_i];
          htmlStr += "<option>";
          htmlStr += name;
          htmlStr += "</option>";
        }
        return playerSelect.html(htmlStr).chosen({
          width: "100%"
        });
      });
    })();
    return (function() {
      var groups, htmlStr;
      htmlStr = "";
      groups = ["Passing", "Rushing", "Receiving", "Totals", "Fantasy", "Other"];
      return App.on("dataSetLoaded", function(event, fullSet) {
        var group, _i, _len, _results;
        _results = [];
        for (_i = 0, _len = groups.length; _i < _len; _i++) {
          group = groups[_i];
          _results.push(htmlStr += "<optgroup label='" + name + "'>");
        }
        return _results;
      });
    })();
  })(window.Plotter);

}).call(this);
