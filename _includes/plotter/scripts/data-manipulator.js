// Generated by CoffeeScript 1.7.1
(function() {
  window.DataManipulator = (function() {
    var data, dataCol;
    data = void 0;
    dataCol = void 0;
    $(function() {
      return $.getJSON("data/dataset.additions.08-12.json", function(d) {
        data = d;
        dataCol = new Collection(data);
        DataManipulator.flattenData();
        DataManipulator.downcaseProps();
        return window.newDataSet = data;
      });
    });
    return {
      flattenData: function() {
        var player, position, positions, results, season, seasons, _i, _j, _k, _len, _len1, _len2, _ref;
        results = [];
        seasons = Object.keys(data);
        console.log(seasons);
        positions = Object.keys(data[seasons[0]]);
        console.log(positions);
        for (_i = 0, _len = seasons.length; _i < _len; _i++) {
          season = seasons[_i];
          for (_j = 0, _len1 = positions.length; _j < _len1; _j++) {
            position = positions[_j];
            _ref = data[season][position];
            for (_k = 0, _len2 = _ref.length; _k < _len2; _k++) {
              player = _ref[_k];
              results.push(player);
            }
          }
        }
        return data = results;
      },
      downcaseProps: function() {
        var key, newKey, p, player, results, val, _i, _j, _len, _len1, _ref;
        results = [];
        for (_i = 0, _len = data.length; _i < _len; _i++) {
          player = data[_i];
          p = new Object();
          _ref = Object.keys(player);
          for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
            key = _ref[_j];
            if (key === "GS") {
              newKey = "gamesStarted";
            } else if (key === "G") {
              newKey = "gamesPlayed";
            } else if (key === "VBD") {
              newKey = key;
            } else if (key === "RecYards") {
              newKey = "recYds";
            } else if (key === "Tm") {
              newKey = "team";
            } else {
              newKey = key.charAt(0).toLowerCase() + key.slice(1);
            }
            val = player[key];
            if (val == null) {
              val = 0;
            }
            p[newKey] = val;
          }
          results.push(p);
        }
        return data = JSON.parse(JSON.stringify(results));
      },
      setData: function(d) {
        return data = d;
      },
      getData: function() {
        return data;
      }
    };
  })();

}).call(this);
